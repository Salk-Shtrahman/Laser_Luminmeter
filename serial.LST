C51 COMPILER V9.55   SERIAL                                                                01/18/2017 13:17:51 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN serial.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ---------------------------------------------*/
   3          /* --- STC12C5Axx Series MCU UART (8-bit/9-bit)Demo ----------------*/
   4          /* --- Mobile: (86)13922805190 -------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966----------------------*/
   7          /* --- Web: www.STCMCU.com -----------------------------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* If you want to use the program or the program referenced in the  */
  10          /* article, please specify in which data and procedures from STC    */
  11          /*------------------------------------------------------------------*/
  12          
  13          #include "reg51.h"
  14          #include "intrins.h"
  15          
  16          typedef unsigned char BYTE;
  17          typedef unsigned int WORD;
  18          
  19          #define FOSC 11059200L      //System frequency
  20          #define BAUD 9600           //UART baudrate
  21          
  22          /*Define UART parity mode*/
  23          #define NONE_PARITY     0   //None parity
  24          #define ODD_PARITY      1   //Odd parity
  25          #define EVEN_PARITY     2   //Even parity
  26          #define MARK_PARITY     3   //Mark parity
  27          #define SPACE_PARITY    4   //Space parity
  28          
  29          #define PARITYBIT EVEN_PARITY   //Testing even parity
  30          
  31          sbit bit9 = P2^2;           //P2.2 show UART data bit9
  32          bit busy;
  33          
  34          void SendData(BYTE dat);
  35          void SendString(char *s);
  36          
  37          void main()
  38          {
  39   1      #if (PARITYBIT == NONE_PARITY)
                  SCON = 0x50;            //8-bit variable UART
              #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
  42   1          SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
  43   1      #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  46   1      
  47   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  48   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  49   1          TR1 = 1;                //Timer1 start run
  50   1          ES = 1;                 //Enable UART interrupt 
  51   1          EA = 1;                 //Open master interrupt switch
  52   1      
  53   1          
  54   1          while(1){SendString("STC12C5A60S2\r\nUart Test !\r\n");}
  55   1      
C51 COMPILER V9.55   SERIAL                                                                01/18/2017 13:17:51 PAGE 2   

  56   1      }
  57          
  58          /*----------------------------
  59          UART interrupt service routine
  60          ----------------------------*/
  61          void Uart_Isr() interrupt 4 using 1
  62          {
  63   1          if (RI)
  64   1          {
  65   2              RI = 0;             //Clear receive interrupt flag
  66   2              P0 = SBUF;          //P0 show UART data
  67   2              bit9 = RB8;         //P2.2 show parity bit
  68   2          }
  69   1          if (TI)
  70   1          {
  71   2              TI = 0;             //Clear transmit interrupt flag
  72   2              busy = 0;           //Clear transmit busy flag
  73   2          }
  74   1      }
  75          
  76          /*----------------------------
  77          Send a byte data to UART
  78          Input: dat (data to be sent)
  79          Output:None
  80          ----------------------------*/
  81          void SendData(BYTE dat)
  82          {
  83   1          while (busy);           //Wait for the completion of the previous data is sent
  84   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  85   1          if (P)                  //Set the parity bit according to P
  86   1          {
  87   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
  90   2              TB8 = 1;            //Set parity bit to 1
  91   2      #endif
  92   2          }
  93   1          else
  94   1          {
  95   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
  98   2              TB8 = 0;            //Set parity bit to 0
  99   2      #endif
 100   2          }
 101   1          busy = 1;
 102   1          SBUF = ACC;             //Send data to UART buffer
 103   1      }
 104          
 105          /*----------------------------
 106          Send a string to UART
 107          Input: s (address of string)
 108          Output:None
 109          ----------------------------*/
 110          void SendString(char *s)
 111          {
 112   1          while (*s)              //Check the end of the string
 113   1          {
 114   2              SendData(*s++);     //Send current char and increment string ptr
 115   2          }
 116   1      }
 117          
C51 COMPILER V9.55   SERIAL                                                                01/18/2017 13:17:51 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
